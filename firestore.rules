rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Army lists - users can manage their own armies
    match /armies/{armyId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.ownerId || request.auth.uid == request.resource.data.ownerId);
      allow read: if request.auth != null; // Others can read for game setup
    }
    
    // Game sessions - participants can read/write
    match /games/{gameId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.players;
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.players;
    }
    
    // Game state updates - real-time subcollection
    match /games/{gameId}/updates/{updateId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/games/$(gameId)) &&
        request.auth.uid in get(/databases/$(database)/documents/games/$(gameId)).data.players;
    }
    
    // Public army templates (read-only for non-owners)
    match /armyTemplates/{templateId} {
      allow read: if true; // Public templates
      allow write: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || request.auth.uid == request.resource.data.createdBy);
    }
  }
}
